{"version":3,"file":"main-defaultjs-ical.min.js","mappings":"mBACwB,CAACA,IACH,oBAAXC,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeJ,EAASC,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeJ,EAAS,aAAc,CAAEK,OAAO,K,KCJvD,MAAMC,EAAe,CAAC,KAAK,IAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACrEC,KAAIC,IACG,CAACC,EAAG,IAAIC,OAAO,KAAMF,EAAM,KAAMG,EAAI,KAAOH,MAI/CI,EAAU,CAACC,EAAOC,KACvB,IAAIC,EAAOF,EAIX,OAHAC,EAAWE,SAAQC,IAClBF,EAAOA,EAAKG,QAAQD,EAAKR,EAAGQ,EAAKN,MAE3BI,GAkBR,MAAMI,EACLC,YAAYC,EAAWC,GACtBC,KAAKF,UATiB,EAACG,EAAUF,KAClC,MAAMG,EAASH,EAAiB,KAAO,MACvC,OAAOE,EAASjB,KAAIU,IACnB,IAAIA,EAAKS,IAAiB,UAAXT,EAAKS,GACnB,MAAO,CAACjB,EAAG,IAAIC,OAAOE,EAAQK,EAAKT,KAAKF,GAAemB,GAASd,EAAGM,EAAKU,YACvEC,QAAOX,KAAUA,KAIFY,CAAgBR,EAAWC,GAC5CC,KAAKO,YAlBmB,EAACN,EAAUF,KACpC,MAAMG,EAASH,EAAiB,KAAO,MACvC,OAAOE,EAASjB,KAAIU,IACnB,IAAIA,EAAKS,IAAiB,YAAXT,EAAKS,GACnB,MAAO,CAACjB,EAAG,IAAIC,OAAOE,EAAQK,EAAKU,QAASrB,GAAemB,GAASd,EAAGM,EAAKT,SAC3EoB,QAAOX,KAAUA,KAaAc,CAAkBV,EAAWC,GAGjDU,OAAOnB,GACN,OAAOD,EAAQC,EAAOU,KAAKF,WAG5BY,SAASpB,GACR,OAAOD,EAAQC,EAAOU,KAAKO,aAG5BI,wBACC,OAAO,IAAIf,EAAQ,CAClB,CAACX,KAAM,KAAMmB,QAAU,QACvB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,OACtB,CAACnB,KAAM,IAAKmB,QAAU,UC/CT,IDoDhB,ECpD4B,CAC3B,CAACnB,KAAM,IAAKmB,QAAQ,OACpB,CAACnB,KAAM,IAAKmB,QAAQ,OACpB,CAACnB,KAAM,IAAKmB,QAAQ,U","sources":["webpack://@default-js/defaultjs-ical/webpack/runtime/make namespace object","webpack://@default-js/defaultjs-ical/./node_modules/@default-js/defaultjs-common-utils/src/Escaper.js","webpack://@default-js/defaultjs-ical/./src/Deserializer.js"],"sourcesContent":["// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// required to build the internal escape filter for regex\nconst REGEXCHARMAP = [\"\\\\\",\"?\",\"[\", \"]\", \"{\", \"}\", \"(\", \")\", \".\", \"^\", \"$\"]\n\t.map(char => { \n\t\treturn {f: new RegExp(\"\\\\\" +char, \"g\"), v : \"\\\\\" + char};\n\t});\n\n\nconst mapping = (aText, theFilters) => {\n\tlet text = aText;\n\ttheFilters.forEach(item => {\n\t\ttext = text.replace(item.f, item.v);\n\t});\n\treturn text;\n};\n\nconst buildUnescapeList = (aCharMap, isCaseSensitiv) => {\n\tconst option = isCaseSensitiv ? \"mg\" : \"mgi\"; \n\treturn aCharMap.map(item => {\n\t\tif(!item.at || item.at == \"unescape\")\n\t\t\treturn {f: new RegExp(mapping(item.escaped, REGEXCHARMAP), option), v: item.char}\n\t}).filter(item => !!item);\n};\n\nconst buildEscapeList = (aCharMap, isCaseSensitiv) => {\n\tconst option = isCaseSensitiv ? \"mg\" : \"mgi\"; \n\treturn aCharMap.map(item => {\n\t\tif(!item.at || item.at == \"escape\")\n\t\t\treturn {f: new RegExp(mapping(item.char,REGEXCHARMAP), option), v: item.escaped}\n\t}).filter(item => !!item);\n};\nclass Escaper {\n\tconstructor(escapeMap, isCaseSensitiv){\n\t\tthis.escapeMap = buildEscapeList(escapeMap, isCaseSensitiv)\n\t\tthis.unescapeMap = buildUnescapeList(escapeMap, isCaseSensitiv)\n\t}\n\t\n\tescape(aText){\n\t\treturn mapping(aText, this.escapeMap);\n\t}\n\t\n\tunescape(aText){\n\t\treturn mapping(aText, this.unescapeMap);\n\t}\n\t\n\tstatic REGEXP_ESCAPER(){\n\t\treturn new Escaper([\n\t\t\t{char: \"\\\\\", escaped : \"\\\\\\\\\"},\n\t\t\t{char: \"?\", escaped : \"\\\\?\"},\n\t\t\t{char: \"[\", escaped : \"\\\\[\"},\n\t\t\t{char: \"]\", escaped : \"\\\\]\"},\n\t\t\t{char: \"{\", escaped : \"\\\\{\"},\n\t\t\t{char: \"}\", escaped : \"\\\\}\"},\n\t\t\t{char: \"(\", escaped : \"\\\\(\"},\n\t\t\t{char: \")\", escaped : \"\\\\)\"},\n\t\t\t{char: \".\", escaped : \"\\\\.\"},\n\t\t\t{char: \"^\", escaped : \"\\\\^\"},\n\t\t\t{char: \"$\", escaped : \"\\\\$\"}\n\t\t]);\n\t}\n}\n\nexport default Escaper;\n\n","import Escaper from \"@default-js/defaultjs-common-utils/src/Escaper\";\r\n\r\n//const REGEX_KEY = /^([^\\s:;]+)(;([^:]+))?:(.+)$/;\r\nconst REGEX_VALUELINE = /^\\s(.+)$/;\r\n\r\nconst KEY_VALUE_SPLIT = /:/;\r\nconst PARAM_SPLIT = /;/;\r\nconst PARAM_VALUE_SPLIT = /=/;\r\n\r\nconst ESCAPER = new Escaper([\r\n\t{char: \",\", escaped:\"\\\\,\"},\r\n\t{char: \";\", escaped:\"\\\\;\"},\r\n\t{char: \":\", escaped:\"\\\\:\"},\r\n]);\r\n\r\n\r\nconst getParameter = function(aText){\r\n\tif(aText == null || typeof aText === \"undefined\")\r\n\t\treturn;\r\n\tconst items = aText.split(PARAM_SPLIT);\r\n\tconst params = {};\r\n\titems.forEach(item => {\r\n\t\tconst parts = item.split(PARAM_VALUE_SPLIT);\r\n\t\tparams[parts[0].toLowerCase()] = parts[1];\r\n\t})\r\n\t\r\n\treturn params;\r\n};\r\n\r\nconst getValue = function(aValue, aTokenizer){\r\n\tlet value = aValue;\r\n\tlet match = REGEX_VALUELINE.exec(aTokenizer.lines()[aTokenizer.index() + 1]);\r\n\twhile(match != null && typeof match !== \"undefined\" && match.length > 0){\t\t\r\n\t\tvalue += match[1];\r\n\t\taTokenizer.skip();\r\n\t\tmatch = REGEX_VALUELINE.exec(aTokenizer.lines()[aTokenizer.index() + 1]);\r\n\t}\r\n\t\r\n\treturn ESCAPER.unescape(value);\r\n};\r\n\r\n\r\nconst Deserializer = function(aLine, aTokenizer){\r\n\tlet index = aLine.search(KEY_VALUE_SPLIT);\r\n\tif(index == -1)\r\n\t\treturn;\r\n\t\r\n\tconst result = {\r\n\t\t\tkey : aLine.substring(0, index),\r\n\t\t\tvalue : getValue(aLine.substring(index + 1), aTokenizer)\r\n\t};\r\n\t\r\n\tindex = result.key.search(PARAM_SPLIT);\r\n\tif(index != -1){\r\n\t\tresult.parameter = getParameter(result.key.substring(index + 1));\r\n\t\tresult.key = result.key.substring(0, index);\r\n\t}\r\n\t\t\r\n\t\r\n\treturn result\r\n};\r\n\r\nexport default Deserializer;"],"names":["exports","Symbol","toStringTag","Object","defineProperty","value","REGEXCHARMAP","map","char","f","RegExp","v","mapping","aText","theFilters","text","forEach","item","replace","Escaper","constructor","escapeMap","isCaseSensitiv","this","aCharMap","option","at","escaped","filter","buildEscapeList","unescapeMap","buildUnescapeList","escape","unescape","static"],"sourceRoot":""}